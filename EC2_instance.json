{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources" : {
     "GreengrassTest" :{
		       "Type" : "AWS::EC2::Instance",
               "Properties" : {
                      "AdditionalInfo" : "This will create an EC2 instance for Greengrass_core",
                      "ImageId" : "[ImageID_from_your_acc]",
                      "InstanceType" : "t2.micro",
			          "KeyName" : "[your_key_name]",
                      "SubnetId" : "[SubnetID_should_be_same_as_of_windows_ec2_instance]",
                      "UserData" : {
					              "Fn::Base64": {
                                      "Fn::Join": [
                                                    "",
                                                     [
                                                      "#!/bin/bash\n",

                                                      "# Create Greengrass user and group \n",
                                                      "adduser --system ggc_user\n",
                                                      "groupadd --system ggc_group\n",

                                                      "# Extract and run the following script to mount cgroups.\n",
                                                      "# This allows AWS IoT Greengrass to set the memory limit for Lambda functions.\n",
                                                      "# Cgroups are also required to run AWS IoT Greengrass in the default containerization mode.\n",
                                                      "cd /home/ec2-user\n",
                                                      "curl https://raw.githubusercontent.com/tianon/cgroupfs-mount/951c38ee8d802330454bdede20d85ec1c0f8d312/cgroupfs-mount > cgroupfs-mount.sh\n",
                                                      "chmod +x cgroupfs-mount.sh\n",
                                                      "bash ./cgroupfs-mount.sh\n",

                                                      "# Install Java4\n",
                                                      "amazon-linux-extras enable corretto8\n",
                                                      "yum -y install java-1.8.0-amazon-corretto-devel\n",
                                                      "# Greengrass Lambdas require 'java8' executable, not 'java'\n",
                                                      "# See https://gist.github.com/noahcoad/92133670d6189440f883d9369211aeca \n",
                                                      "mv /usr/bin/java /usr/bin/java8\n",

                                                      "# Download and install Core software\n",
                                                      "curl https://d1onfpft10uf5o.cloudfront.net/greengrass-core/downloads/1.11.4/greengrass-linux-x86-64-1.11.4.tar.gz > greengrass-linux-x86-64-1.11.4.tar.gz\n",
                                                      "tar -xzvf greengrass-linux-x86-64-1.11.4.tar.gz -C /\n",

                                                      "# Download and install Core device certificates\n",
								                      "export AWS_ACCESS_KEY_ID=[access_key_id]\n",
                                                      "export AWS_SECRET_ACCESS_KEY=[your_secret_access_key]\n",
                                                      "aws s3 cp [S3_URI_for_greengrass_application] certs.tar.gz\n",
                                                      "tar -xzvf certs.tar.gz -C /greengrass\n",

                                                      "# Download and install Root CA certificate\n",
                                                      "cd /greengrass/certs/\n",
                                                      "wget -O root.ca.pem https://www.amazontrust.com/repository/AmazonRootCA1.pem \n",
													  "# Start the Greengrass daemon \n",
                                                      "cd /greengrass/ggc/core/ \n",
                                                      "./greengrassd start "
													  
                                                     ]
                                                  ]
                                                }
		                            }
                      
                            }
}
}
   
}
